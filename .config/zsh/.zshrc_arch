#!/bin/zsh
# This script is exclusively for Arch Linux based

if [ -f /etc/os-release ]; then
	. /etc/os-release
    if [[ "$ID" != *"arch"* ]]; then
		echo "This script is exclusively for Arch Linux based"
        sleep 5
        return 1
	fi
fi

# if ! command -v yay &>/dev/null; then
# 	sudo pacman -Syu --noconfirm yay
# fi

if [ ! -f $HOME/.asdf/asdf.sh ]; then
    echo "Cloning /Installing ASDF on your home"
	git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
	. $HOME/.asdf/asdf.sh
	echo "Installing golang latest with asdf"
	asdf plugin add golang
	asdf install golang latest
	asdf global golang latest

	echo "Installing nodejs 20.11.1 with asdf"
	asdf plugin add nodejs
	asdf install nodejs 20.11.1
	asdf global nodejs 20.11.1

	echo "Installing golang latest with asdf"
	asdf plugin add python
	asdf install python latest
	asdf global python latest

    echo "Installing rust latest with asdf"
    asdf plugin add rust
    asdf install rust latest
    asdf global rust latest
fi

if [ -f $HOME/.asdf/asdf.sh ]; then
	. $HOME/.asdf/asdf.sh
fi

if ! command -v fzf &>/dev/null; then
    sudo pacman -S --noconfirm fzf
fi

if ! command -v nvim &>/dev/null; then
	sudo pacman -S --noconfirm neovim
fi

if ! command -v tmux &>/dev/null; then
    sudo pacman -S --noconfirm tmux
fi

if ! command -v rg &>/dev/null; then
	sudo pacman -S --noconfirm ripgrep
fi

if ! command -v cmake &>/dev/null; then
	sudo pacman -S --noconfirm cmake
fi

export PATH="$HOME/.cargo/bin:$PATH"

if ! command -v alacritty &>/dev/null; then
	sudo pacman -S cmake freetype2 fontconfig pkg-config make libxcb libxkbcommon python
	cargo install alacritty --locked
	sudo cp $HOME/.cargo/bin/alacritty /usr/local/bin/
	sudo curl --fail --location --show-error https://github.com/alacritty/alacritty/blob/master/extra/logo/compat/alacritty-term.png?raw=true --output /usr/share/pixmaps/Alacritty.png
	sudo curl --fail --location --show-error https://raw.githubusercontent.com/alacritty/alacritty/master/extra/logo/alacritty-term.svg --output /usr/share/pixmaps/Alacritty.svg
	sudo curl -o Alacritty.desktop https://raw.githubusercontent.com/alacritty/alacritty/master/extra/linux/Alacritty.desktop
	sudo desktop-file-install Alacritty.desktop
	sudo update-desktop-database
	sudo rm -rf Alacritty.desktop
fi

if ! command -v zoxide &>/dev/null; then
	cargo install zoxide --locked
fi
eval "$(zoxide init zsh)"

function setup() {
	fonts_dir="${HOME}/.local/share/fonts"
	if [ ! -d "${fonts_dir}" ]; then
		echo "Creating dir for Fonts: $fonts_dir"
		mkdir -p "${fonts_dir}"
	fi

	if [ ! -f "${fonts_dir}/FiraCodeNerdFont-Regular.ttf" ]; then
		echo "Downloading FiraCode Nerd Font"
		url_firacodenerdfont="https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/FiraCode.zip"
		zip="FiraCode.zip"
		sudo curl --fail --location --show-error ${url_firacodenerdfont} --output ${zip}
		sudo unzip -o -q -d ${fonts_dir} ${zip}
		sudo rm ${zip}
		sudo fc-cache -f
		echo "FiraCode Nerd Font installed"
	fi

	if [ ! -f "${fonts_dir}/TerminessNerdFont-Regular.ttf" ]; then
        echo "Downloading Terminus Nerd Font"
        url_terminusfont="https://github.com/ryanoasis/nerd-fonts/releases/download/v4.2.1/Terminus.zip"
        zip_terminus="Terminus.zip"

        sudo unzip -o -q -d ${fonts_dir} ${zip_terminus}
        sudo rm ${zip_terminus}
        sudo fc-cache -f
        echo "Terminus Nert Font installed"
    fi

}
